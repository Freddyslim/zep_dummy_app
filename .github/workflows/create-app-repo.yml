name: create-app-repo

on:
  workflow_dispatch:
    inputs:
      app-name:
        description: 'Name of the new app'
        required: true

permissions:
  contents: write

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create app skeleton
        run: |
          APP=${{ inputs.app-name }}
          mkdir -p app/$APP/{config,templates,$APP}
          echo "__version__ = '0.0.1'" > app/$APP/__init__.py
          echo "$APP" > app/$APP/modules.txt
          cat <<'EOF' > app/$APP/patches.txt
[pre_model_sync]
# Patches added in this section will be executed before doctypes are migrated
# Read docs to understand patches: https://frappeframework.com/docs/v14/user/en/database-migrations

[post_model_sync]
# Patches added in this section will be executed after doctypes are migrated
EOF
          touch app/$APP/config/__init__.py
          touch app/$APP/templates/__init__.py
          touch app/$APP/$APP/__init__.py

          cat <<'EOF' > app/$APP/hooks.py
          app_name = "$APP"
          app_title = "$APP"
          app_publisher = "Unknown"
          app_description = "App generated by workflow"
          app_email = "email@example.com"
          app_license = "MIT"
          # Further configuration options are commented out for convenience.
          EOF

          cat <<EOF >> app/$APP/hooks.py
          # Apps
          # ------------------

          # required_apps = []

          # Each item in the list will be shown as an app in the apps page
          # add_to_apps_screen = [
          #     {
          #         "name": "$APP",
          #         "logo": "/assets/$APP/logo.png",
          #         "title": "$APP",
          #         "route": "/$APP",
          #         "has_permission": "$APP.api.permission.has_app_permission"
          #     }
          # ]
          EOF

          cat <<'EOF' > app/README.md
          ### $APP

          App generated by workflow

          ### Installation

          You can install this app using the [bench](https://github.com/frappe/bench) CLI:

          ```bash
          cd $PATH_TO_YOUR_BENCH
          bench get-app <repo_url> --branch develop
          bench install-app $APP
          ```

          ### Contributing

          This app uses `pre-commit` for code formatting and linting. Please [install pre-commit](https://pre-commit.com/#installation) and enable it for this repository:

          ```bash
          cd app
          pre-commit install
          ```

          Pre-commit is configured to use the following tools for checking and formatting your code:

          - ruff
          - eslint
          - prettier
          - pyupgrade

          ### License

          MIT
          EOF

          cat <<'EOF' > app/license.txt
          MIT License

          Copyright (c) [year] [fullname]

          Permission is hereby granted, free of charge, to any person obtaining a copy
          of this software and associated documentation files (the "Software"), to deal
          in the Software without restriction, including without limitation the rights
          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          copies of the Software, and to permit persons to whom the Software is
          furnished to do so, subject to the following conditions:

          The above copyright notice and this permission notice shall be included in all
          copies or substantial portions of the Software.

          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          SOFTWARE.
          EOF

          cat <<EOF > app/pyproject.toml
          [project]
          name = "$APP"
          authors = [
              { name = "Your Name", email = "email@example.com" }
          ]
          description = "App generated by workflow"
          requires-python = ">=3.10"
          readme = "README.md"
          dynamic = ["version"]
          dependencies = [
              # "frappe~=15.0.0" # Installed and managed by bench.
          ]

          [build-system]
          requires = ["flit_core >=3.4,<4"]
          build-backend = "flit_core.buildapi"

          [tool.bench.dev-dependencies]

          [tool.ruff]
          line-length = 110
          target-version = "py310"

          [tool.ruff.lint]
          select = ["F", "E", "W", "I", "UP", "B", "RUF"]
          ignore = [
              "B017",
              "B018",
              "B023",
              "B904",
              "E101",
              "E402",
              "E501",
              "E741",
              "F401",
              "F403",
              "F405",
              "F722",
              "W191",
          ]
          typing-modules = ["frappe.types.DF"]

          [tool.ruff.format]
          quote-style = "double"
          indent-style = "tab"
          docstring-code-format = true
          EOF

      - name: Commit app
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app
          git commit -m "feat: scaffold app ${{ inputs.app-name }}"
          git push

      - name: Remove workflow
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git rm .github/workflows/create-app-repo.yml
          git commit -m "chore: remove create-app-repo workflow"
          git push
